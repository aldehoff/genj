package geo.kml;import genj.gedcom.Entity;import genj.gedcom.Gedcom;import genj.gedcom.Property;import genj.geo.GeoLocation;import geo.ReportKML;import java.io.IOException;import java.io.Writer;public class DetailedPlacemarkWriter extends PlacemarkWriter {	public DetailedPlacemarkWriter(Writer out, String idFormat) {		super(out, 0, idFormat);	}	protected void writePlacemarkContent(String indent, GeoLocation location, String idFormat) throws IOException {		for (int p = 0; p < location.getNumProperties(); p++) {			Property prop = location.getProperty(p);			Entity entity = prop.getEntity();			out.write(indent);			addDate(prop);						// TODO optionally allow abbreviation			out.write(Gedcom.getName(prop.getTag()));						String s = entity.toString(idFormat.length()>0);			if (idFormat.length()>0) {			  			}			out.write(" " + ReportKML.format(entity, idFormat));			out.write("<br>\n");		}	}	private void addDate(Property prop) throws IOException {		Property date = prop.getProperty("DATE", true);		if (date != null) {			out.write(date.toString());			out.write(" ");		}	}}