author   = Jo Pol
version  = 0.1
updated  = 
category = chart

name     = Graphical tree formatted by yEd
name.nl  = Grafische boom geformatteerd door yEd 
name.fr  = Arbre graphique pour yEd
name.de  = Grafischer Baum für yEd 

info     =  <h1><center>Graphical tree formatted by yEd</center></h1>
  <p>This report concentrates on label content and places the labels on one big pile.
  You can finish the layout with <a href="http://www.yworks.com/en/products_yed_about.html">yEd</a> 
  which is free as in free beer.
  Launched from a person or family you get only ancestors and descendants. 
  Otherwise you can choose to show all or filter on (special) tag content. 
  </p>
  <img src="ReportForYEdScreenshot.png">
  <p>
  yEd has (semi and fully) automatic layout algorithms to format the graph.
  You can select generations, ancestors or descendants,
  male or female to delete graph sections or mass-edit label formats.
  Some examples of its export types: image map, flash, svg, pdf, png.
  </p><p>
  The list below suggests some tools that might handy to have at your finger tips by docking them.
  </p><ul>
  <li>layout - family tree... (arrange the tree; hint for a pedigree: force male first )</li>
  <li>layout - channel edge router (redraw the lines if you adjusted the tree arrangement; hint: minimum distance zero)</li>
  <li>tools - fit node to label (see node/label sizes below)</li>
  <li>tools - select elements (select ancestors/descendants)</li>
  <li>windows - palette - current elements (select male/females/families)</li>
  <li>tools - transform graph (mirror a selected tree section)</li>
  </ul><p>
  Node/label sizes
  </p><p>
  Family <em>nodes</em> are created narrow though their <em>labels</em> might be wide.
  This saves space between spouses (if placed below) but can obscure lines, for example in case of remarriages.
  So consider to apply 'fit node to label' just to males and females before applying the 'family tree layouter'.
  </p>
  <h2>Configuration</h2>
  <p>
  The file <code>.../GenealogyJ/report/ReportForYed.properties</code>
  contains XML snippets used to generate the report.
  These snippets are tested with yEd version 3.4.2. 
  You can change some defaults in this file, like fonts and colors. 
  Note that the node colors should match yEd's family tree layouter.
  See also yEd's help. 
  </p>
  <h3>Place name format</h3>
  <ol>
  <li>if the option field is void, the first available jurisdiction will be displayed for each place.</li>
  <li>if the option equals <font color="blue">all</font>, all the jurisdictions will be displayed, separated by commas. </li>
  <li>otherwise, enter the jurisdiction numbers (starting from 0 for the first one) and the formatting you wish. 
  For example, if your family place format is "village, town, county, state, country", you could enter 
  <font color="blue">0, 1 (3)</font> to display: "village, town (state)".</li>
  </ol>
  <h3>Images</h3><p>
  Erase the html snippets to omit images.
  You can specify dimensions like for example: 
  <code>&lt;img src="file:///C:/my documents/my images/{0}" width="60" height="90"></code>
  When specifying dimensions, make sure to switch off yEd's preferences - modules - morph layouts.
  Otherwise yEd becomes very slow. Note that images might get stretched. 
  With single quotes for the src attribute, {0} will not be replaced by OBJE:FILE.
  </p>
  <h3>Gender symbol</h3><p>
  You may want black-and-white prints or use colors for another purpose such as 
  bloodlines in complex graphs.
  For that purpose you can specify a symbol, word, image or whatever to indicate the gender.
  </p>

info.fr     =  <h1><center>Arbre graphique pour yEd</center></h1>
  <p>Ce rapport crée un fichier utilisable par <a href="http://www.yworks.com/en/products_yed_about.html">yEd</a>, un logiciel de graphiques gratuit propriétaire.
  Le rapport génère le contenu des cadres et les place en tas dans le fichier pour yEd.</p>
  <p>Lancé à partir d'une personne ou d'une famille, ce rapport liste seulement leurs ancêtres et descendants. Par ailleurs, il est possible de choisir de voir toutes les personnes ou de filtrer selon le contenu d'un label particulier dans votre fichier GEDCOM. 
  </p>
  <img src="ReportForYEdScreenshot.png">
  <p>
  yEd propose des algorithmes et fonctions automatiques et semi-automatiques pour mettre en forme le graphe. Vous pouvez sélectionner les générations, ancêtres ou descendants,
  hommes ou femmes pour supprimer des parties du graphe ou pour éditer les formats de cadres ou d'étiquettes. yEd peut notamment exporter aux formats image map, flash, svg, pdf, png.
  </p><p>
  La liste ci-dessous suggère des outils dans yEd qui peuvent vous être pratiques et dont vous pouvez arranger les fenêtres autour de votre graphe pour faciliter votre travail de mise en forme. Note: yEd ne parle qu'anglais ou allemand pour l'instant...
  </p><ul>
  <li>layout - family tree... : mise en forme de l'arbre généalogique ; conseil : mettre les hommes en premier (force male first)</li>
  <li>layout - channel edge router : redessine les lignes si vous avez ajusté la mise en forme de l'arbre ; conseil : distance minimale à zéro (minimum distance zero)</li>
  <li>tools - fit node to label : ajuste les noeuds (cadres) aux étiquettes (voir tailles noeuds / étiquettes ci-dessous)</li>
  <li>tools - select elements : sélection des ancêtres / descendants</li>
  <li>windows - palette - current elements : sélection hommes / femmes / familles </li>
  <li>tools - transform graph : inverser (en miroir) une partie de l'arbre</li>
  </ul><p>
  Tailles des noeuds / étiquettes
  </p><p>
  Les <em>noeuds (nodes)</em> des familles sont étroits bien que leur <em>étiquette (label)</em> puisse être large. Ceci réduit l'espace entre époux (si les familles sont sous les conjoints), mais peut masquer des lignes, par exemple en cas de remariage. Il est donc conseillé de n'appliquer la fonction 'fit node to label' qu'aux hommes et aux femmes avant d'appliquer la mise en forme 'family tree layouter'.
  </p>
  <h2>Configuration</h2>
  <p>
  Le fichier <code>GenealogyJ/report/ReportForYed.properties</code> contient des fragments de code XML utilisés pour générer le rapport. Ces fragments de code ont été testés avec la version 3.4.2 de yEd. Vous pouvez changer certains paramètres par défaut dans ce fichier, comme les polices de caractères et les couleurs. Notez bien que les couleurs des noeuds doivent correspondre aux couleurs de mise en forme d'arbre généalogique dans yEd (donc à modifier avec précaution). Voir l'aide de yEd.
  </p>
  <h3>Format des noms de lieux</h3>
  <ol>
  <li>si l'option est vide, la première juridiction non vide sera affichée pour chaque lieu.</li>
  <li>si l'option vaut <font color="blue">all</font>, affichage de toutes les juridictions séparées par des virgules. </li>
  <li>Sinon, entrer les numéros des juridictions (la première étant 0) et le formatage souhaité. Par exemple, si le format des lieux de votre fichier GEDCOM est "village, ville, département, région, pays",
  vous pouvez saisir <font color="blue">0, 1 (3)</font> pour afficher: "village, ville (région)".</li>
  </ol></p>
  <h3>Images</h3><p>
  Effacez les fragments de code HTML dans les options pour ignorer les images.
  Vous pouvez spécifier les dimensions, comme par exemple : <code>&lt;img src="file:///C:/Mes Documents/Mes Images/{0}" width="60" height="90"></code>.
  Quand vous spécifiez les dimensions, pensez à désactiver la configuration de yEd dans preferences - modules - morph layouts, faute de quoi yEd devient très lent. Les images peuvent être déformées par la modification de dimension.
  Avec des quotes simple pour l'attribute src, {0} n'est pas substituée avec OBJE:FILE.
  </p>
  <h3>Symbole de sexe</h3><p>
  Si vous ne souhaitez pas utiliser les couleurs pour indiquer les sexes (sortie noir et blanc ou utilisation des couleurs pour distinguer les lignes d'ascendance dans un arbre complexe), vous pouvez utiliser un symbole, un mot ou une image pour indiquer le sexe dans le cadre d'une personne.
  </p>

# button on file dialog
save     = Save
save.fr  = Enregistrer
save.de  = Speichern

####################################
############# options ##############
####################################

showOccupation     = occupation
showOccupation.nl  = beroepen
showOccupation.fr  = Profession
showOccupation.de  = Beruf

events             = birth, death, marriage, divorce
events.nl          = geboorte, overlijden, huwelijk, scheiding
events.fr          = Naissance, décès, mariage, divorce
events.de          = Geburt, Tod, Heirat, Scheidung
showDates          = dates 
showPlaces         = places
showDates.nl       = dates 
showPlaces.nl      = plaatsen
showDates.fr       = Dates 
showPlaces.fr      = Lieux
showDates.de       = Daten 
showPlaces.de      = Orte
place_display_format = place format (check report description)
place_display_format.nl = formaat van plaatsnamen (zie raportbeschrijving)
place_display_format.fr	= Format des lieux (voir présentation du rapport)
place_display_format.de = Ortsformat (siehe Reportbeschreibung)

images             = images (e.g. <img src="file:///.../{0}"> {0} = OBJE:FILE see also report description)
images.nl          = afbeeldingen (vb. <img src="<file:///.../{0}"> {0} = OBJE:FILE zie ook de raportbeschrijving)
images.fr          = Images (p.ex. <img src="file:///.../{0}"> {0} = OBJE:FILE voir aussi présentation du rapport)
images.de          = Bilder (z.B. <img src="<file:///.../{0}"> {0} = OBJE:FILE siehe auch Reportbeschreibung)
famImage           = html snippet for families
famImage.nl        = html snippet voor families
famImage.fr        = Fragment de code HTML pour les familles
famImage.de        = HTML-Schnipsel für die Familien
indiImage          = html snippet for persons
indiImage.nl       = html snippet voor personen
indiImage.fr       = Fragment de code HTML pour les personnes
indiImage.de       = HTML-Schnipsel für die Personen
imageExtensions    = file name extensions recognized as images
imageExtensions.nl = extensties van bestandsnamen die herkend worden als afbeeldingen
imageSnippetDefault = <img src="file:///C:/my documents/my images/{0}">
imageSnippetDefault.nl = <img src="file:///C:/mijn documenten/mijn afbeeldingen/{0}">
imageSnippetDefault.fr = <img src="file:///C:/Mes documents/Mes Images/{0}">
imageSnippetDefault.de = <img src="file:///C:/Meine Dokumente/Meine Bilder/{0}">

links              = links for image map ({0} = GedCom id)
links.nl           = links voor image map ({0} = GedCom id)
links.fr           = Liens pour le stockage des images ({0} = identifiant GEDCOM)
links.de           = Links für Bilder ({0} = GEDCOM Id-Kennzeichnung)
family             = url for family 
family.nl          = url voor familie
family.fr          = URL pour les familles 
family.de          = URL für die Familien
familyUrlDefault   = http://my.site.com/{0}.html
familyUrlDefault.nl = http://mijn.site.com/{0}.html
familyUrlDefault.fr = http://mon.site.com/{0}.html
familyUrlDefault.de = http://meine.seite.com/{0}.html
indi               = url for individual 
indi.nl            = url voor individu
indi.fr            = URL pour les personnes 
indi.de            = URL für die Personen
indiUrlDefault     = http://my.site.com/{0}.html
indiUrlDefault.nl  = http://mijn.site.com/{0}.html
indiUrlDefault.fr  = http://mon.site.com/{0}.html
indiUrlDefault.de  = http://meine.seite.com/{0}.html

filter       = filter (e.g. to show shared descendants/ancestors)
filter.nl    = filter (bijv. om gedeelde nakomelingen voorouders te tonen)
filter.fr    = Filtre (p. ex. pour montrer les descendants / ancêtres communs)
filter.de    = Filter (z.B. um gemeinsame Nachkommen / Vorfahren zu zeigen)
tag          = tag (typically a custom tag starting with _)
tag.nl       = tag (bijv. een eigen tag die begint met _)
tag.fr       = Label GEDCOM (p. ex. un label personnel débutant par _)
tag.de       = GEDCOM-Kennzeichen (tag) (z.B. ein persönliches Tag mit _ am Anfang)
content      = tag content (typically a report id)
content.nl   = tag inhoud (bijv. een raport naam)
content.fr   = Contenu du label GEDCOM (p. ex. un nom de rapport)
content.de   = Inhalt des GEDCOM-Kennzeichens (z.B. ein Berichtname)
active       = filter active
active.nl    = filter gebruiken
active.fr    = Filtre actif
active.de    = Filter aktiv
ancestors    = include ancestors
ancestors.nl = inclusief voorouders 
ancestors.fr = Inclure les ancêtres
ancestors.de = Mit Vorfahren 
descendants  = include descendants
descendants.nl = inclusief nakomelingen 
descendants.fr = Inclure les descendants
descendants.de = Mit Nachkommen 

gender     = symbol or image for gender (see report description)
gender.nl  = symbool voor geslacht (zie ook de raportbeschrijving)
gender.fr  = Symbole ou image pour le sexe (voir description du rapport)
gender.de  = Symbol oder Bild für das Geschlecht (siehe Reportbeschreibung)
male       = html snippet for male
male.nl    = html snippet voor man
male.fr    = Fragment de code HTML pour un homme
male.de    = HTML-Schnipsel für einen Mann
female     = html snippet for female
female.nl  = html snippet voor vrouw
female.fr  = Fragment de code HTML pour une femme
female.de  = HTML-Schnipsel für eine Frau
unknown    = html snippet for unknown
unknown.nl = html snippet voor onbekend geslacht
unknown.fr = Fragment de code HTML pour inconnu
unknown.de = HTML-Schnipsel für unbekannt

#########################################################################################
############# no more translations below, XML snippets based on yEd 3.4.2. ##############
#########################################################################################

# TODO: try post processors, can it create an automatic initial layout? 
# see http://www.yworks.com/products/graphml/demo/yext/graphml/resources/xsl/ant2graphml.xsl
XmlHead = <?xml version="1.0" encoding="UTF-8" standalone="no"?>
  <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
           xmlns:y="http://www.yworks.com/xml/graphml" 
           xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd">
    <!--Created by GenJ -->
    <key for="graphml" id="d0" yfiles.type="resources"/>
    <key for="node" id="d1" attr.name="url" attr.type="string"/>
    <key for="node" id="d2" attr.name="description" attr.type="string"/>
    <key for="node" id="d3" yfiles.type="nodegraphics"/>
    <key for="edge" id="d4" attr.name="url" attr.type="string"/>
    <key for="edge" id="d5" attr.name="description" attr.type="string"/>
    <key for="edge" id="d6" yfiles.type="edgegraphics"/>
    <graph edgedefault="directed" id="G">

# this is {2} of the IndiNode and FamilyNode
LinkContainer  = <data key="d1"><![CDATA[{0}]]></data> 
    
# this is {4} of the IndiNode and {3} of the FamilyNode
PopUpContainer = <data key="d2"><![CDATA[{0}]]></data> 

IndiNode =    <node id="{0}">{2}{4}
      <data key="d3">
        <y:GenericNode configuration="BevelNode2">
          <y:Geometry height="21" width="130" x="10" y="10"/>
          <y:Fill color="{3}" transparent="false"/>
          <y:BorderStyle color="{3}" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" 
			           hasBackgroundColor="false" hasLineColor="false" 
			           textColor="#000000" fontFamily="Dialog" fontSize="12" fontStyle="plain" 
			           visible="true" modelName="internal" modelPosition="c" 
			           width="129" height="19" x="1" y="1">{1}</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>

FamilyNode =    <node id="{0}">{2}{3}
      <data key="d3">
        <y:ShapeNode>
          <y:Geometry height="{4}" width="5.0" x="28" y="28"/>
          <y:Fill color="#000000" color2="#000000" transparent="false"/>
          <y:BorderStyle hasColor="false" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" 
                       backgroundColor="#99CC00" hasLineColor="false" 
                       textColor="#000000" fontFamily="Dialog" fontSize="12" fontStyle="plain" 
                       visible="true" modelName="internal" modelPosition="t" 
                       width="77" height="34" x="10" y="10">{1}</y:NodeLabel>
          <y:Shape type="rectangle"/>
        </y:ShapeNode>
      </data>
    </node>
    
Edge =    <edge id="{0}" source="{1}" target="{2}">
      <data key="d6">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="17.5" tx="0.0" ty="-10"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    
XmlTail =   <data key="d0">
    <y:Resources/>
  </data>
  </graph>
 </graphml>
